//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:866eaa5f3444fe209115f1a932dcd3c2]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: 6dbf00edcd5b51d5d1807517e7744923
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:866eaa5f3444fe209115f1a932dcd3c2]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:c17b4b2b4c4f6fb94019c7ec035383da]
//Written by UHDL in 2023-07-11 17:18:31
//[UHDL]Tool Message End [md5:c17b4b2b4c4f6fb94019c7ec035383da]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:6dbf00edcd5b51d5d1807517e7744923]
module test (
	input         clk                    ,
	input         rst_n                  ,
	input  [31:0] D_u_slv_top_axi_awaddr ,
	input  [2:0]  D_u_slv_top_axi_awprot ,
	input         D_u_slv_top_axi_awvalid,
	output        D_u_slv_top_axi_awready,
	input  [31:0] D_u_slv_top_axi_wdata  ,
	input  [3:0]  D_u_slv_top_axi_wstrb  ,
	input         D_u_slv_top_axi_wvalid ,
	output        D_u_slv_top_axi_wready ,
	output [1:0]  D_u_slv_top_axi_bresp  ,
	output        D_u_slv_top_axi_bvalid ,
	input         D_u_slv_top_axi_bready ,
	input  [31:0] D_u_slv_top_axi_araddr ,
	input  [2:0]  D_u_slv_top_axi_arprot ,
	input         D_u_slv_top_axi_arvalid,
	output        D_u_slv_top_axi_arready,
	output [31:0] D_u_slv_top_axi_rdata  ,
	output [1:0]  D_u_slv_top_axi_rresp  ,
	output        D_u_slv_top_axi_rvalid ,
	input         D_u_slv_top_axi_rready );

	//Wire define for this module.

	//Wire define for sub module.
	wire [6:0]  u_mst_TO_u_slv_SIG_m_axi_awid   ;
	wire [31:0] u_mst_TO_u_slv_SIG_m_axi_awaddr ;
	wire [7:0]  u_mst_TO_u_slv_SIG_m_axi_awlen  ;
	wire [2:0]  u_mst_TO_u_slv_SIG_m_axi_awsize ;
	wire [1:0]  u_mst_TO_u_slv_SIG_m_axi_awburst;
	wire        u_mst_TO_u_slv_SIG_m_axi_awlock ;
	wire [3:0]  u_mst_TO_u_slv_SIG_m_axi_awcache;
	wire [2:0]  u_mst_TO_u_slv_SIG_m_axi_awprot ;
	wire [3:0]  u_mst_TO_u_slv_SIG_m_axi_awqos  ;
	wire [4:0]  u_mst_TO_u_slv_SIG_m_axi_awuser ;
	wire        u_mst_TO_u_slv_SIG_m_axi_awvalid;
	wire [31:0] u_mst_TO_u_slv_SIG_m_axi_wdata  ;
	wire [3:0]  u_mst_TO_u_slv_SIG_m_axi_wstrb  ;
	wire        u_mst_TO_u_slv_SIG_m_axi_wlast  ;
	wire [4:0]  u_mst_TO_u_slv_SIG_m_axi_wuser  ;
	wire        u_mst_TO_u_slv_SIG_m_axi_wvalid ;
	wire        u_mst_TO_u_slv_SIG_m_axi_bready ;
	wire [6:0]  u_mst_TO_u_slv_SIG_m_axi_arid   ;
	wire [31:0] u_mst_TO_u_slv_SIG_m_axi_araddr ;
	wire [7:0]  u_mst_TO_u_slv_SIG_m_axi_arlen  ;
	wire [2:0]  u_mst_TO_u_slv_SIG_m_axi_arsize ;
	wire [1:0]  u_mst_TO_u_slv_SIG_m_axi_arburst;
	wire        u_mst_TO_u_slv_SIG_m_axi_arlock ;
	wire [3:0]  u_mst_TO_u_slv_SIG_m_axi_arcache;
	wire [2:0]  u_mst_TO_u_slv_SIG_m_axi_arprot ;
	wire [3:0]  u_mst_TO_u_slv_SIG_m_axi_arqos  ;
	wire [4:0]  u_mst_TO_u_slv_SIG_m_axi_aruser ;
	wire        u_mst_TO_u_slv_SIG_m_axi_arvalid;
	wire        u_mst_TO_u_slv_SIG_m_axi_rready ;
	wire        u_slv_TO_u_mst_SIG_s_axi_awready;
	wire        u_slv_TO_u_mst_SIG_s_axi_wready ;
	wire [6:0]  u_slv_TO_u_mst_SIG_s_axi_bid    ;
	wire [1:0]  u_slv_TO_u_mst_SIG_s_axi_bresp  ;
	wire [4:0]  u_slv_TO_u_mst_SIG_s_axi_buser  ;
	wire        u_slv_TO_u_mst_SIG_s_axi_bvalid ;
	wire        u_slv_TO_u_mst_SIG_s_axi_arready;
	wire [6:0]  u_slv_TO_u_mst_SIG_s_axi_rid    ;
	wire [31:0] u_slv_TO_u_mst_SIG_s_axi_rdata  ;
	wire [1:0]  u_slv_TO_u_mst_SIG_s_axi_rresp  ;
	wire        u_slv_TO_u_mst_SIG_s_axi_rlast  ;
	wire [4:0]  u_slv_TO_u_mst_SIG_s_axi_ruser  ;
	wire        u_slv_TO_u_mst_SIG_s_axi_rvalid ;

	//Wire define for Inout.

	//Wire sub module connect to this module and inter module connect.

	//Wire this module connect to sub module.
	assign u_slv_clk = clk;
	
	assign u_slv_rst_n = rst_n;
	
	assign u_mst_clk = clk;
	
	assign u_mst_rst_n = rst_n;
	

	//module inst.
	axi_slave #(
		.DATA_WIDTH(32),
		.AWADDR_WIDTH(32),
		.ARADDR_WIDTH(32),
		.AWID_WIDTH(7),
		.BID_WIDTH(7),
		.ARID_WIDTH(7),
		.RID_WIDTH(7),
		.AWUSER_WIDTH(5),
		.WUSER_WIDTH(5),
		.BUSER_WIDTH(5),
		.ARUSER_WIDTH(5),
		.RUSER_WIDTH(5))
	u_slv (
		.clk(u_slv_clk),
		.rst_n(u_slv_rst_n),
		.top_axi_awaddr(D_u_slv_top_axi_awaddr),
		.top_axi_awprot(D_u_slv_top_axi_awprot),
		.top_axi_awvalid(D_u_slv_top_axi_awvalid),
		.top_axi_awready(D_u_slv_top_axi_awready),
		.top_axi_wdata(D_u_slv_top_axi_wdata),
		.top_axi_wstrb(D_u_slv_top_axi_wstrb),
		.top_axi_wvalid(D_u_slv_top_axi_wvalid),
		.top_axi_wready(D_u_slv_top_axi_wready),
		.top_axi_bresp(D_u_slv_top_axi_bresp),
		.top_axi_bvalid(D_u_slv_top_axi_bvalid),
		.top_axi_bready(D_u_slv_top_axi_bready),
		.top_axi_araddr(D_u_slv_top_axi_araddr),
		.top_axi_arprot(D_u_slv_top_axi_arprot),
		.top_axi_arvalid(D_u_slv_top_axi_arvalid),
		.top_axi_arready(D_u_slv_top_axi_arready),
		.top_axi_rdata(D_u_slv_top_axi_rdata),
		.top_axi_rresp(D_u_slv_top_axi_rresp),
		.top_axi_rvalid(D_u_slv_top_axi_rvalid),
		.top_axi_rready(D_u_slv_top_axi_rready),
		.s_axi_awid(u_mst_TO_u_slv_SIG_m_axi_awid),
		.s_axi_awaddr(u_mst_TO_u_slv_SIG_m_axi_awaddr),
		.s_axi_awlen(u_mst_TO_u_slv_SIG_m_axi_awlen),
		.s_axi_awsize(u_mst_TO_u_slv_SIG_m_axi_awsize),
		.s_axi_awburst(u_mst_TO_u_slv_SIG_m_axi_awburst),
		.s_axi_awlock(u_mst_TO_u_slv_SIG_m_axi_awlock),
		.s_axi_awcache(u_mst_TO_u_slv_SIG_m_axi_awcache),
		.s_axi_awprot(u_mst_TO_u_slv_SIG_m_axi_awprot),
		.s_axi_awqos(u_mst_TO_u_slv_SIG_m_axi_awqos),
		.s_axi_awuser(u_mst_TO_u_slv_SIG_m_axi_awuser),
		.s_axi_awvalid(u_mst_TO_u_slv_SIG_m_axi_awvalid),
		.s_axi_awready(u_slv_TO_u_mst_SIG_s_axi_awready),
		.s_axi_wdata(u_mst_TO_u_slv_SIG_m_axi_wdata),
		.s_axi_wstrb(u_mst_TO_u_slv_SIG_m_axi_wstrb),
		.s_axi_wlast(u_mst_TO_u_slv_SIG_m_axi_wlast),
		.s_axi_wuser(u_mst_TO_u_slv_SIG_m_axi_wuser),
		.s_axi_wvalid(u_mst_TO_u_slv_SIG_m_axi_wvalid),
		.s_axi_wready(u_slv_TO_u_mst_SIG_s_axi_wready),
		.s_axi_bid(u_slv_TO_u_mst_SIG_s_axi_bid),
		.s_axi_bresp(u_slv_TO_u_mst_SIG_s_axi_bresp),
		.s_axi_buser(u_slv_TO_u_mst_SIG_s_axi_buser),
		.s_axi_bvalid(u_slv_TO_u_mst_SIG_s_axi_bvalid),
		.s_axi_bready(u_mst_TO_u_slv_SIG_m_axi_bready),
		.s_axi_arid(u_mst_TO_u_slv_SIG_m_axi_arid),
		.s_axi_araddr(u_mst_TO_u_slv_SIG_m_axi_araddr),
		.s_axi_arlen(u_mst_TO_u_slv_SIG_m_axi_arlen),
		.s_axi_arsize(u_mst_TO_u_slv_SIG_m_axi_arsize),
		.s_axi_arburst(u_mst_TO_u_slv_SIG_m_axi_arburst),
		.s_axi_arlock(u_mst_TO_u_slv_SIG_m_axi_arlock),
		.s_axi_arcache(u_mst_TO_u_slv_SIG_m_axi_arcache),
		.s_axi_arprot(u_mst_TO_u_slv_SIG_m_axi_arprot),
		.s_axi_arqos(u_mst_TO_u_slv_SIG_m_axi_arqos),
		.s_axi_aruser(u_mst_TO_u_slv_SIG_m_axi_aruser),
		.s_axi_arvalid(u_mst_TO_u_slv_SIG_m_axi_arvalid),
		.s_axi_arready(u_slv_TO_u_mst_SIG_s_axi_arready),
		.s_axi_rid(u_slv_TO_u_mst_SIG_s_axi_rid),
		.s_axi_rdata(u_slv_TO_u_mst_SIG_s_axi_rdata),
		.s_axi_rresp(u_slv_TO_u_mst_SIG_s_axi_rresp),
		.s_axi_rlast(u_slv_TO_u_mst_SIG_s_axi_rlast),
		.s_axi_ruser(u_slv_TO_u_mst_SIG_s_axi_ruser),
		.s_axi_rvalid(u_slv_TO_u_mst_SIG_s_axi_rvalid),
		.s_axi_rready(u_mst_TO_u_slv_SIG_m_axi_rready));
	axi_master #(
		.DATA_WIDTH(32),
		.AWADDR_WIDTH(32),
		.ARADDR_WIDTH(32),
		.AWID_WIDTH(7),
		.BID_WIDTH(7),
		.ARID_WIDTH(7),
		.RID_WIDTH(7),
		.AWUSER_WIDTH(5),
		.WUSER_WIDTH(5),
		.BUSER_WIDTH(5),
		.ARUSER_WIDTH(5),
		.RUSER_WIDTH(5))
	u_mst (
		.clk(u_mst_clk),
		.rst_n(u_mst_rst_n),
		.m_axi_awid(u_mst_TO_u_slv_SIG_m_axi_awid),
		.m_axi_awaddr(u_mst_TO_u_slv_SIG_m_axi_awaddr),
		.m_axi_awlen(u_mst_TO_u_slv_SIG_m_axi_awlen),
		.m_axi_awsize(u_mst_TO_u_slv_SIG_m_axi_awsize),
		.m_axi_awburst(u_mst_TO_u_slv_SIG_m_axi_awburst),
		.m_axi_awlock(u_mst_TO_u_slv_SIG_m_axi_awlock),
		.m_axi_awcache(u_mst_TO_u_slv_SIG_m_axi_awcache),
		.m_axi_awprot(u_mst_TO_u_slv_SIG_m_axi_awprot),
		.m_axi_awqos(u_mst_TO_u_slv_SIG_m_axi_awqos),
		.m_axi_awuser(u_mst_TO_u_slv_SIG_m_axi_awuser),
		.m_axi_awvalid(u_mst_TO_u_slv_SIG_m_axi_awvalid),
		.m_axi_awready(u_slv_TO_u_mst_SIG_s_axi_awready),
		.m_axi_wdata(u_mst_TO_u_slv_SIG_m_axi_wdata),
		.m_axi_wstrb(u_mst_TO_u_slv_SIG_m_axi_wstrb),
		.m_axi_wlast(u_mst_TO_u_slv_SIG_m_axi_wlast),
		.m_axi_wuser(u_mst_TO_u_slv_SIG_m_axi_wuser),
		.m_axi_wvalid(u_mst_TO_u_slv_SIG_m_axi_wvalid),
		.m_axi_wready(u_slv_TO_u_mst_SIG_s_axi_wready),
		.m_axi_bid(u_slv_TO_u_mst_SIG_s_axi_bid),
		.m_axi_bresp(u_slv_TO_u_mst_SIG_s_axi_bresp),
		.m_axi_buser(u_slv_TO_u_mst_SIG_s_axi_buser),
		.m_axi_bvalid(u_slv_TO_u_mst_SIG_s_axi_bvalid),
		.m_axi_bready(u_mst_TO_u_slv_SIG_m_axi_bready),
		.m_axi_arid(u_mst_TO_u_slv_SIG_m_axi_arid),
		.m_axi_araddr(u_mst_TO_u_slv_SIG_m_axi_araddr),
		.m_axi_arlen(u_mst_TO_u_slv_SIG_m_axi_arlen),
		.m_axi_arsize(u_mst_TO_u_slv_SIG_m_axi_arsize),
		.m_axi_arburst(u_mst_TO_u_slv_SIG_m_axi_arburst),
		.m_axi_arlock(u_mst_TO_u_slv_SIG_m_axi_arlock),
		.m_axi_arcache(u_mst_TO_u_slv_SIG_m_axi_arcache),
		.m_axi_arprot(u_mst_TO_u_slv_SIG_m_axi_arprot),
		.m_axi_arqos(u_mst_TO_u_slv_SIG_m_axi_arqos),
		.m_axi_aruser(u_mst_TO_u_slv_SIG_m_axi_aruser),
		.m_axi_arvalid(u_mst_TO_u_slv_SIG_m_axi_arvalid),
		.m_axi_arready(u_slv_TO_u_mst_SIG_s_axi_arready),
		.m_axi_rid(u_slv_TO_u_mst_SIG_s_axi_rid),
		.m_axi_rdata(u_slv_TO_u_mst_SIG_s_axi_rdata),
		.m_axi_rresp(u_slv_TO_u_mst_SIG_s_axi_rresp),
		.m_axi_rlast(u_slv_TO_u_mst_SIG_s_axi_rlast),
		.m_axi_ruser(u_slv_TO_u_mst_SIG_s_axi_ruser),
		.m_axi_rvalid(u_slv_TO_u_mst_SIG_s_axi_rvalid),
		.m_axi_rready(u_mst_TO_u_slv_SIG_m_axi_rready));

endmodule
//[UHDL]Content End [md5:6dbf00edcd5b51d5d1807517e7744923]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

