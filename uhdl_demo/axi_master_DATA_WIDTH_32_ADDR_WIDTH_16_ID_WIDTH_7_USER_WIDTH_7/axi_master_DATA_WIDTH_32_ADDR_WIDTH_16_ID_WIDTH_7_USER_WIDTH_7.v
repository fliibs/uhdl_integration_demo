//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:eb87ae88d8a16976e25febcb89e905ff]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: 35eed76eb9fbd16a61a9528ffda5e828
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:eb87ae88d8a16976e25febcb89e905ff]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:81315fb8ff8ec910fbc4d5b6bba46eec]
//Written by UHDL in 2023-07-06 00:46:53
//[UHDL]Tool Message End [md5:81315fb8ff8ec910fbc4d5b6bba46eec]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:35eed76eb9fbd16a61a9528ffda5e828]
module axi_master_DATA_WIDTH_32_ADDR_WIDTH_16_ID_WIDTH_7_USER_WIDTH_7 (
	output [6:0]  D_u_slv_m_axi_awid   ,
	output [15:0] D_u_slv_m_axi_awaddr ,
	output [7:0]  D_u_slv_m_axi_awlen  ,
	output [2:0]  D_u_slv_m_axi_awsize ,
	output [1:0]  D_u_slv_m_axi_awburst,
	output        D_u_slv_m_axi_awlock ,
	output [3:0]  D_u_slv_m_axi_awcache,
	output [2:0]  D_u_slv_m_axi_awprot ,
	output [3:0]  D_u_slv_m_axi_awqos  ,
	output [6:0]  D_u_slv_m_axi_awuser ,
	output        D_u_slv_m_axi_awvalid,
	input         D_u_slv_m_axi_awready,
	output [31:0] D_u_slv_m_axi_wdata  ,
	output [3:0]  D_u_slv_m_axi_wstrb  ,
	output        D_u_slv_m_axi_wlast  ,
	output [6:0]  D_u_slv_m_axi_wuser  ,
	output        D_u_slv_m_axi_wvalid ,
	input         D_u_slv_m_axi_wready ,
	input  [6:0]  D_u_slv_m_axi_bid    ,
	input  [1:0]  D_u_slv_m_axi_bresp  ,
	input  [6:0]  D_u_slv_m_axi_buser  ,
	input         D_u_slv_m_axi_bvalid ,
	output        D_u_slv_m_axi_bready ,
	output [6:0]  D_u_slv_m_axi_arid   ,
	output [15:0] D_u_slv_m_axi_araddr ,
	output [7:0]  D_u_slv_m_axi_arlen  ,
	output [2:0]  D_u_slv_m_axi_arsize ,
	output [1:0]  D_u_slv_m_axi_arburst,
	output        D_u_slv_m_axi_arlock ,
	output [3:0]  D_u_slv_m_axi_arcache,
	output [2:0]  D_u_slv_m_axi_arprot ,
	output [3:0]  D_u_slv_m_axi_arqos  ,
	output [6:0]  D_u_slv_m_axi_aruser ,
	output        D_u_slv_m_axi_arvalid,
	input         D_u_slv_m_axi_arready,
	input  [6:0]  D_u_slv_m_axi_rid    ,
	input  [31:0] D_u_slv_m_axi_rdata  ,
	input  [1:0]  D_u_slv_m_axi_rresp  ,
	input         D_u_slv_m_axi_rlast  ,
	input  [6:0]  D_u_slv_m_axi_ruser  ,
	input         D_u_slv_m_axi_rvalid ,
	output        D_u_slv_m_axi_rready ,
	input         D_u_slv_clk          ,
	input         D_u_slv_rst_n        );
	wire        u_slv_clk          ;
	wire        u_slv_rst_n        ;
	wire [6:0]  u_slv_m_axi_awid   ;
	wire [15:0] u_slv_m_axi_awaddr ;
	wire [7:0]  u_slv_m_axi_awlen  ;
	wire [2:0]  u_slv_m_axi_awsize ;
	wire [1:0]  u_slv_m_axi_awburst;
	wire        u_slv_m_axi_awlock ;
	wire [3:0]  u_slv_m_axi_awcache;
	wire [2:0]  u_slv_m_axi_awprot ;
	wire [3:0]  u_slv_m_axi_awqos  ;
	wire [6:0]  u_slv_m_axi_awuser ;
	wire        u_slv_m_axi_awvalid;
	wire        u_slv_m_axi_awready;
	wire [31:0] u_slv_m_axi_wdata  ;
	wire [3:0]  u_slv_m_axi_wstrb  ;
	wire        u_slv_m_axi_wlast  ;
	wire [6:0]  u_slv_m_axi_wuser  ;
	wire        u_slv_m_axi_wvalid ;
	wire        u_slv_m_axi_wready ;
	wire [6:0]  u_slv_m_axi_bid    ;
	wire [1:0]  u_slv_m_axi_bresp  ;
	wire [6:0]  u_slv_m_axi_buser  ;
	wire        u_slv_m_axi_bvalid ;
	wire        u_slv_m_axi_bready ;
	wire [6:0]  u_slv_m_axi_arid   ;
	wire [15:0] u_slv_m_axi_araddr ;
	wire [7:0]  u_slv_m_axi_arlen  ;
	wire [2:0]  u_slv_m_axi_arsize ;
	wire [1:0]  u_slv_m_axi_arburst;
	wire        u_slv_m_axi_arlock ;
	wire [3:0]  u_slv_m_axi_arcache;
	wire [2:0]  u_slv_m_axi_arprot ;
	wire [3:0]  u_slv_m_axi_arqos  ;
	wire [6:0]  u_slv_m_axi_aruser ;
	wire        u_slv_m_axi_arvalid;
	wire        u_slv_m_axi_arready;
	wire [6:0]  u_slv_m_axi_rid    ;
	wire [31:0] u_slv_m_axi_rdata  ;
	wire [1:0]  u_slv_m_axi_rresp  ;
	wire        u_slv_m_axi_rlast  ;
	wire [6:0]  u_slv_m_axi_ruser  ;
	wire        u_slv_m_axi_rvalid ;
	wire        u_slv_m_axi_rready ;
	assign D_u_slv_m_axi_awid = u_slv_m_axi_awid;
	
	assign D_u_slv_m_axi_awaddr = u_slv_m_axi_awaddr;
	
	assign D_u_slv_m_axi_awlen = u_slv_m_axi_awlen;
	
	assign D_u_slv_m_axi_awsize = u_slv_m_axi_awsize;
	
	assign D_u_slv_m_axi_awburst = u_slv_m_axi_awburst;
	
	assign D_u_slv_m_axi_awlock = u_slv_m_axi_awlock;
	
	assign D_u_slv_m_axi_awcache = u_slv_m_axi_awcache;
	
	assign D_u_slv_m_axi_awprot = u_slv_m_axi_awprot;
	
	assign D_u_slv_m_axi_awqos = u_slv_m_axi_awqos;
	
	assign D_u_slv_m_axi_awuser = u_slv_m_axi_awuser;
	
	assign D_u_slv_m_axi_awvalid = u_slv_m_axi_awvalid;
	
	assign D_u_slv_m_axi_wdata = u_slv_m_axi_wdata;
	
	assign D_u_slv_m_axi_wstrb = u_slv_m_axi_wstrb;
	
	assign D_u_slv_m_axi_wlast = u_slv_m_axi_wlast;
	
	assign D_u_slv_m_axi_wuser = u_slv_m_axi_wuser;
	
	assign D_u_slv_m_axi_wvalid = u_slv_m_axi_wvalid;
	
	assign D_u_slv_m_axi_bready = u_slv_m_axi_bready;
	
	assign D_u_slv_m_axi_arid = u_slv_m_axi_arid;
	
	assign D_u_slv_m_axi_araddr = u_slv_m_axi_araddr;
	
	assign D_u_slv_m_axi_arlen = u_slv_m_axi_arlen;
	
	assign D_u_slv_m_axi_arsize = u_slv_m_axi_arsize;
	
	assign D_u_slv_m_axi_arburst = u_slv_m_axi_arburst;
	
	assign D_u_slv_m_axi_arlock = u_slv_m_axi_arlock;
	
	assign D_u_slv_m_axi_arcache = u_slv_m_axi_arcache;
	
	assign D_u_slv_m_axi_arprot = u_slv_m_axi_arprot;
	
	assign D_u_slv_m_axi_arqos = u_slv_m_axi_arqos;
	
	assign D_u_slv_m_axi_aruser = u_slv_m_axi_aruser;
	
	assign D_u_slv_m_axi_arvalid = u_slv_m_axi_arvalid;
	
	assign D_u_slv_m_axi_rready = u_slv_m_axi_rready;
	
	assign u_slv_clk = D_u_slv_clk;
	
	assign u_slv_rst_n = D_u_slv_rst_n;
	
	assign u_slv_m_axi_awready = D_u_slv_m_axi_awready;
	
	assign u_slv_m_axi_wready = D_u_slv_m_axi_wready;
	
	assign u_slv_m_axi_bid = D_u_slv_m_axi_bid;
	
	assign u_slv_m_axi_bresp = D_u_slv_m_axi_bresp;
	
	assign u_slv_m_axi_buser = D_u_slv_m_axi_buser;
	
	assign u_slv_m_axi_bvalid = D_u_slv_m_axi_bvalid;
	
	assign u_slv_m_axi_arready = D_u_slv_m_axi_arready;
	
	assign u_slv_m_axi_rid = D_u_slv_m_axi_rid;
	
	assign u_slv_m_axi_rdata = D_u_slv_m_axi_rdata;
	
	assign u_slv_m_axi_rresp = D_u_slv_m_axi_rresp;
	
	assign u_slv_m_axi_rlast = D_u_slv_m_axi_rlast;
	
	assign u_slv_m_axi_ruser = D_u_slv_m_axi_ruser;
	
	assign u_slv_m_axi_rvalid = D_u_slv_m_axi_rvalid;
	
	axi_master #(
		.DATA_WIDTH(32),
		.ADDR_WIDTH(16),
		.ID_WIDTH(7),
		.USER_WIDTH(7))
	u_slv (
		.clk(u_slv_clk),
		.rst_n(u_slv_rst_n),
		.m_axi_awid(u_slv_m_axi_awid),
		.m_axi_awaddr(u_slv_m_axi_awaddr),
		.m_axi_awlen(u_slv_m_axi_awlen),
		.m_axi_awsize(u_slv_m_axi_awsize),
		.m_axi_awburst(u_slv_m_axi_awburst),
		.m_axi_awlock(u_slv_m_axi_awlock),
		.m_axi_awcache(u_slv_m_axi_awcache),
		.m_axi_awprot(u_slv_m_axi_awprot),
		.m_axi_awqos(u_slv_m_axi_awqos),
		.m_axi_awuser(u_slv_m_axi_awuser),
		.m_axi_awvalid(u_slv_m_axi_awvalid),
		.m_axi_awready(u_slv_m_axi_awready),
		.m_axi_wdata(u_slv_m_axi_wdata),
		.m_axi_wstrb(u_slv_m_axi_wstrb),
		.m_axi_wlast(u_slv_m_axi_wlast),
		.m_axi_wuser(u_slv_m_axi_wuser),
		.m_axi_wvalid(u_slv_m_axi_wvalid),
		.m_axi_wready(u_slv_m_axi_wready),
		.m_axi_bid(u_slv_m_axi_bid),
		.m_axi_bresp(u_slv_m_axi_bresp),
		.m_axi_buser(u_slv_m_axi_buser),
		.m_axi_bvalid(u_slv_m_axi_bvalid),
		.m_axi_bready(u_slv_m_axi_bready),
		.m_axi_arid(u_slv_m_axi_arid),
		.m_axi_araddr(u_slv_m_axi_araddr),
		.m_axi_arlen(u_slv_m_axi_arlen),
		.m_axi_arsize(u_slv_m_axi_arsize),
		.m_axi_arburst(u_slv_m_axi_arburst),
		.m_axi_arlock(u_slv_m_axi_arlock),
		.m_axi_arcache(u_slv_m_axi_arcache),
		.m_axi_arprot(u_slv_m_axi_arprot),
		.m_axi_arqos(u_slv_m_axi_arqos),
		.m_axi_aruser(u_slv_m_axi_aruser),
		.m_axi_arvalid(u_slv_m_axi_arvalid),
		.m_axi_arready(u_slv_m_axi_arready),
		.m_axi_rid(u_slv_m_axi_rid),
		.m_axi_rdata(u_slv_m_axi_rdata),
		.m_axi_rresp(u_slv_m_axi_rresp),
		.m_axi_rlast(u_slv_m_axi_rlast),
		.m_axi_ruser(u_slv_m_axi_ruser),
		.m_axi_rvalid(u_slv_m_axi_rvalid),
		.m_axi_rready(u_slv_m_axi_rready));

endmodule
//[UHDL]Content End [md5:35eed76eb9fbd16a61a9528ffda5e828]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

